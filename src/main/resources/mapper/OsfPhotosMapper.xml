<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit.dao.OsfPhotosDao">
  <resultMap id="BaseResultMap" type="com.fit.entity.OsfPhotos">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="album_id" jdbcType="INTEGER" property="albumId" />
    <result column="ts" jdbcType="TIMESTAMP" property="ts" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `key`, album_id, ts, `desc`
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from osf_photos
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from osf_photos
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="save" keyProperty="id" parameterType="com.fit.entity.OsfPhotos" useGeneratedKeys="true">
    insert into osf_photos
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="key != null">
        `key`,
      </if>
      <if test="albumId != null">
        album_id,
      </if>
      <if test="ts != null">
        ts,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="albumId != null">
        #{albumId,jdbcType=INTEGER},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.fit.entity.OsfPhotos">
    update osf_photos
    <set>
      <if test="key != null">
        `key` = #{key,jdbcType=VARCHAR},
      </if>
      <if test="albumId != null">
        album_id = #{albumId,jdbcType=INTEGER},
      </if>
      <if test="ts != null">
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Base_Where_List">
    <where>
      <if test="key != null and key != ''">
         and `key` = #{key,jdbcType=VARCHAR}
      </if>
      <if test="albumId != null">
         and album_id = #{albumId,jdbcType=INTEGER}
      </if>
      <if test="ts != null">
         and ts = #{ts,jdbcType=TIMESTAMP}
      </if>
      <if test="desc != null and desc != ''">
         and `desc` = #{desc,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <select id="findList" parameterType="com.fit.entity.OsfPhotos" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from osf_photos
    <include refid="Base_Where_List" />
    order by `id` desc 
    <if test="offset != null and limit != null">
	limit ${offset}, ${limit}
	</if>
  </select>
  <select id="findCount" resultType="java.lang.Integer">
    select count(1) from osf_photos
    <include refid="Base_Where_List" />
  </select>
  <select id="get" parameterType="java.util.Map" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from osf_photos
     <include refid="Base_Where_List" />
  </select>
  <delete id="batchDelete">
    delete from osf_photos
     where id in (
     <foreach collection="array" item="id" separator=",">
     #{id}
     </foreach>
    )
  </delete>
</mapper>