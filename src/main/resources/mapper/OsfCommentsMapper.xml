<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit.dao.OsfCommentsDao">
  <resultMap id="BaseResultMap" type="com.fit.entity.OsfComments">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_object_type" jdbcType="INTEGER" property="commentObjectType" />
    <result column="comment_object_id" jdbcType="INTEGER" property="commentObjectId" />
    <result column="comment_author" jdbcType="INTEGER" property="commentAuthor" />
    <result column="comment_author_name" jdbcType="VARCHAR" property="commentAuthorName" />
    <result column="comment_ts" jdbcType="TIMESTAMP" property="commentTs" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_parent" jdbcType="INTEGER" property="commentParent" />
    <result column="comment_parent_author_name" jdbcType="VARCHAR" property="commentParentAuthorName" />
    <result column="comment_parent_author" jdbcType="INTEGER" property="commentParentAuthor" />
  </resultMap>
  <sql id="Base_Column_List">
    id, comment_object_type, comment_object_id, comment_author, comment_author_name, 
    comment_ts, comment_content, comment_parent, comment_parent_author_name, comment_parent_author
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from osf_comments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from osf_comments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="save" keyProperty="id" parameterType="com.fit.entity.OsfComments" useGeneratedKeys="true">
    insert into osf_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commentObjectType != null">
        comment_object_type,
      </if>
      <if test="commentObjectId != null">
        comment_object_id,
      </if>
      <if test="commentAuthor != null">
        comment_author,
      </if>
      <if test="commentAuthorName != null">
        comment_author_name,
      </if>
      <if test="commentTs != null">
        comment_ts,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentParent != null">
        comment_parent,
      </if>
      <if test="commentParentAuthorName != null">
        comment_parent_author_name,
      </if>
      <if test="commentParentAuthor != null">
        comment_parent_author,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commentObjectType != null">
        #{commentObjectType,jdbcType=INTEGER},
      </if>
      <if test="commentObjectId != null">
        #{commentObjectId,jdbcType=INTEGER},
      </if>
      <if test="commentAuthor != null">
        #{commentAuthor,jdbcType=INTEGER},
      </if>
      <if test="commentAuthorName != null">
        #{commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentTs != null">
        #{commentTs,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentParent != null">
        #{commentParent,jdbcType=INTEGER},
      </if>
      <if test="commentParentAuthorName != null">
        #{commentParentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentParentAuthor != null">
        #{commentParentAuthor,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.fit.entity.OsfComments">
    update osf_comments
    <set>
      <if test="commentObjectType != null">
        comment_object_type = #{commentObjectType,jdbcType=INTEGER},
      </if>
      <if test="commentObjectId != null">
        comment_object_id = #{commentObjectId,jdbcType=INTEGER},
      </if>
      <if test="commentAuthor != null">
        comment_author = #{commentAuthor,jdbcType=INTEGER},
      </if>
      <if test="commentAuthorName != null">
        comment_author_name = #{commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentTs != null">
        comment_ts = #{commentTs,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentParent != null">
        comment_parent = #{commentParent,jdbcType=INTEGER},
      </if>
      <if test="commentParentAuthorName != null">
        comment_parent_author_name = #{commentParentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentParentAuthor != null">
        comment_parent_author = #{commentParentAuthor,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Base_Where_List">
    <where>
      <if test="commentObjectType != null">
         and comment_object_type = #{commentObjectType,jdbcType=INTEGER}
      </if>
      <if test="commentObjectId != null">
         and comment_object_id = #{commentObjectId,jdbcType=INTEGER}
      </if>
      <if test="commentAuthor != null">
         and comment_author = #{commentAuthor,jdbcType=INTEGER}
      </if>
      <if test="commentAuthorName != null and commentAuthorName != ''">
         and comment_author_name = #{commentAuthorName,jdbcType=VARCHAR}
      </if>
      <if test="commentTs != null">
         and comment_ts = #{commentTs,jdbcType=TIMESTAMP}
      </if>
      <if test="commentContent != null and commentContent != ''">
         and comment_content = #{commentContent,jdbcType=VARCHAR}
      </if>
      <if test="commentParent != null">
         and comment_parent = #{commentParent,jdbcType=INTEGER}
      </if>
      <if test="commentParentAuthorName != null and commentParentAuthorName != ''">
         and comment_parent_author_name = #{commentParentAuthorName,jdbcType=VARCHAR}
      </if>
      <if test="commentParentAuthor != null">
         and comment_parent_author = #{commentParentAuthor,jdbcType=INTEGER}
      </if>
    </where>
  </sql>
  <select id="findList" parameterType="com.fit.entity.OsfComments" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from osf_comments
    <include refid="Base_Where_List" />
    order by `id` desc 
    <if test="offset != null and limit != null">
	limit ${offset}, ${limit}
	</if>
  </select>
  <select id="findCount" resultType="java.lang.Integer">
    select count(1) from osf_comments
    <include refid="Base_Where_List" />
  </select>
  <select id="get" parameterType="java.util.Map" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from osf_comments
     <include refid="Base_Where_List" />
  </select>
  <delete id="batchDelete">
    delete from osf_comments
     where id in (
     <foreach collection="array" item="id" separator=",">
     #{id}
     </foreach>
    )
  </delete>
</mapper>